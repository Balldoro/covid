{"version":3,"sources":["GlobalStyles.js","components/Sidebar/SidebarStyles.js","components/Sidebar/Sidebar.js","components/Header/HeaderStyles.js","components/Header/Header.js","components/Dashboard/DashboardStyles.js","components/Dashboard/World/WorldStyles.js","components/Dashboard/Cases/CasesStyles.js","components/Dashboard/Cases/TotalCases.js","components/Dashboard/Cases/NewCases.js","components/Dashboard/Cases/Cases.js","api/index.js","components/Dashboard/World/MostInfected/MostInfectedStyles.js","components/Dashboard/World/MostInfected/MostInfected.js","components/Dashboard/Statistics/StatisticsStyles.js","components/helpers/functions.js","components/Dashboard/Statistics/NewStatistics.js","components/Dashboard/Statistics/TotalStatistics.js","components/Dashboard/Statistics/Statistics.js","components/Dashboard/World/World.js","components/Dashboard/Countries/CountriesStyles.js","components/Dashboard/Countries/CountriesList/CountriesListStyles.js","components/Dashboard/Countries/CountriesList/CountriesList.js","components/Dashboard/Countries/Countries.js","components/Dashboard/SelectedCountry/SelectedCountryStyles.js","components/Dashboard/SelectedCountry/LineChart/LineChartStyles.js","components/Dashboard/SelectedCountry/LineChart/LineChart.js","components/Dashboard/SelectedCountry/SelectedCountry.js","components/Dashboard/Dashboard.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Wrapper","styled","div","nav","List","ul","ListItem","li","LinkIcon","LinkWrapper","NavLink","Sidebar","to","header","Logo","LogoTitle","h1","LogoIcon","span","Path","p","Header","pathname","useLocation","main","Card","section","CardTitle","h2","Button","button","props","active","Navigation","SpinnerWrapper","Spinner","Case","confirmed","recovered","CaseTitle","h3","CaseCounter","TotalCases","cases","TotalConfirmed","TotalAffected","TotalRecovered","TotalDeaths","start","duration","separator","end","deaths","NewCases","AllNewCases","NewConfirmed","NewRecovered","NewDeaths","Cases","newCases","useState","activeButton","setActiveButton","onClick","fetchGlobalData","a","fetch","response","ok","json","data","getCasesFrom","Global","getNewCasesFrom","mostInfected","getMostInfectedFrom","Countries","window","location","reload","console","error","sort","b","slice","fetchAllCountries","Country","fetchDailyOfSelectedCountry","countrySlug","dailyData","filter","item","Confirmed","map","day","Date","Deaths","Recovered","Active","MostInfectedCard","CountryName","CountryInfo","Infected","MostInfected","countries","country","key","CountryCode","src","alt","Slug","ChartWrapper","getPercentage","numberToDivide","divider","toFixed","getDailyData","DailyConfirmed","y","t","DailyActive","DailyRecovered","DailyDeaths","calculateNewCases","lastDay","dayBefore","calculateTotalCases","cnv","useEffect","activePercentage","recoveredPercentage","deathsPercentage","statsChart","Chart","type","labels","datasets","label","backgroundColor","borderColor","hoverBackgroundColor","options","responsive","maintainAspectRatio","legend","fontColor","fontFamily","destroy","id","TotalStatistics","Statistics","NewStatistics","World","setCases","setNewCases","setMostInfected","isLoading","setIsLoading","isMounted","setIsMounted","fetchAPI","Filter","FilterLabel","FilterInput","input","Link","FlagImg","img","CountriesList","searchWord","setSearchWord","value","onChange","e","target","RegExp","test","ISO2","setCountries","BlankCountry","BlankTitle","BlankLink","GoBackArrow","LineChartCard","LineChart","dailyChart","borderCapStyle","borderJoinStyle","pointBackgroundColor","pointHoverRadius","borderWidth","fill","scales","xAxes","time","isoWeekday","unit","parser","displayFormats","week","SelectedCountry","match","setDailyData","params","slug","length","Object","keys","Dashboard","path","component","exact","App","from","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.67b88e90.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  * {\r\n   margin: 0;\r\n   padding: 0;\r\n   box-sizing: border-box;\r\n  }\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n  ul {\r\n    list-style: none;\r\n  }\r\n  #root {\r\n    display:flex;\r\n    min-height: 100vh;\r\n    background-color: #272727;\r\n  }\r\n  `;\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Wrapper = styled.nav`\r\n  position: fixed;\r\n  z-index: 100;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 70px;\r\n  background-color: #fff;\r\n  @media (min-width: 600px) {\r\n    position: static;\r\n    min-width: 120px;\r\n    width: auto;\r\n    min-height: 100vh;\r\n    height: auto;\r\n    border-top-right-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  @media (min-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  width: 50%;\r\n  border: 1px solid #ebebeb;\r\n  @media (min-width: 600px) {\r\n    width: 100%;\r\n    height: 70px;\r\n    border: none;\r\n    border-bottom: 1px solid #ebebeb;\r\n  }\r\n`;\r\n\r\nexport const LinkIcon = styled.div`\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  border: 2px solid #222;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #222;\r\n  color: #fff;\r\n  font-size: 1.35rem;\r\n  margin-bottom: 0.1rem;\r\n`;\r\n\r\nexport const LinkWrapper = styled(NavLink)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-family: Roboto, sans-serif;\r\n  height: 100%;\r\n  text-decoration: none;\r\n  color: #222;\r\n  &.active {\r\n    ${LinkIcon} {\r\n      color: #23b400;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Wrapper,\r\n  List,\r\n  ListItem,\r\n  LinkIcon,\r\n  LinkWrapper\r\n} from \"./SidebarStyles\";\r\nimport { FaGlobeEurope, FaMap } from \"react-icons/fa\";\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <Wrapper>\r\n      <List>\r\n        <ListItem>\r\n          <LinkWrapper to=\"/global\">\r\n            <LinkIcon>\r\n              <FaGlobeEurope />\r\n            </LinkIcon>\r\n            Global\r\n          </LinkWrapper>\r\n        </ListItem>\r\n        <ListItem>\r\n          <LinkWrapper to=\"/countries\">\r\n            <LinkIcon>\r\n              <FaMap />\r\n            </LinkIcon>\r\n            Countries\r\n          </LinkWrapper>\r\n        </ListItem>\r\n      </List>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.header`\r\n  max-width: 1280px;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  color: #fff;\r\n  padding: 1rem 0;\r\n`;\r\n\r\nexport const Logo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LogoTitle = styled.h1`\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 1.8rem;\r\n  font-weight: 400;\r\n  @media (min-width: 860px) {\r\n    font-size: 2.2rem;\r\n  }\r\n`;\r\n\r\nexport const LogoIcon = styled.span`\r\n  color: #23b400;\r\n  margin-left: 0.6rem;\r\n  font-size: 1.6rem;\r\n  @media (min-width: 860px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Path = styled.p`\r\n  font-family: Roboto, sans-serif;\r\n  font-size: 1.05rem;\r\n  text-transform: capitalize;\r\n  @media (min-width: 860px) {\r\n    font-size: 1.25rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { FaBiohazard } from \"react-icons/fa\";\r\nimport { Logo, LogoIcon, Path, LogoTitle, Wrapper } from \"./HeaderStyles\";\r\n\r\nfunction Header() {\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <Wrapper>\r\n      <Logo>\r\n        <LogoTitle>COVID-19</LogoTitle>\r\n        <LogoIcon>\r\n          <FaBiohazard />\r\n        </LogoIcon>\r\n      </Logo>\r\n      <Path>{pathname}</Path>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.main`\r\n  max-width: 1280px;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  padding-bottom: 85px;\r\n  @media (min-width: 600px) {\r\n    padding-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport const Card = styled.section`\r\n  background-color: #1e1e1e;\r\n  color: #fff;\r\n  padding: 1rem;\r\n  border-radius: 14px;\r\n  min-width: 0;\r\n  @media (min-width: 980px) {\r\n    padding: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const CardTitle = styled.h2`\r\n  font-family: Roboto, sans-serif;\r\n  font-size: 1.15rem;\r\n  color: #fff;\r\n  margin-bottom: 1.5rem;\r\n  @media (min-width: 980px) {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  border: none;\r\n  background-color: #272727;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 6px;\r\n  width: 85px;\r\n  margin-right: 1.5rem;\r\n  color: ${props => (props.active ? \"#23b400\" : \"#fff\")};\r\n  border-radius: 8px;\r\n  font-family: Roboto, sans-serif;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Navigation = styled.div`\r\n  display: flex;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Spinner = styled.div`\r\n  grid-column: 1/-1;\r\n  display: block;\r\n  width: 72px;\r\n  height: 72px;\r\n  margin: auto;\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 60px;\r\n    height: 60px;\r\n    margin: 8px;\r\n    border-radius: 50%;\r\n    border: 6px solid #fff;\r\n    border-color: #fff transparent #fff transparent;\r\n    animation: spinner-rotate 1.2s linear infinite;\r\n  }\r\n  @keyframes spinner-rotate {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  gap: 2rem;\r\n  @media (min-width: 860px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  @media (min-width: 980px) {\r\n    gap: 2.5rem;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  gap: 1rem;\r\n  @media (min-width: 420px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  @media (min-width: 980px) {\r\n    gap: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const Case = styled.div`\r\n  padding: 1rem;\r\n  border-radius: 10px;\r\n  background-color: ${props =>\r\n    props.confirmed\r\n      ? \"#790a98\"\r\n      : props.active\r\n      ? \"#03568e\"\r\n      : props.recovered\r\n      ? \"#198200\"\r\n      : \"#a70303\"};\r\n  color: #fff;\r\n`;\r\n\r\nexport const CaseTitle = styled.h3`\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const CaseCounter = styled.span`\r\n  font-family: Roboto, sans-serif;\r\n  font-size: 1.5rem;\r\n  display: inline-block;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport { Case, CaseTitle, CaseCounter } from \"./CasesStyles\";\r\nimport CountUp from \"react-countup\";\r\nfunction TotalCases({\r\n  cases: { TotalConfirmed, TotalAffected, TotalRecovered, TotalDeaths }\r\n}) {\r\n  return (\r\n    <>\r\n      {TotalConfirmed ? (\r\n        <>\r\n          <Case confirmed>\r\n            <CaseTitle>All</CaseTitle>\r\n            <CaseCounter>\r\n              <CountUp\r\n                start={0}\r\n                duration={3}\r\n                separator=\" \"\r\n                end={TotalConfirmed}\r\n              />\r\n            </CaseCounter>\r\n          </Case>\r\n          <Case active>\r\n            <CaseTitle>Active</CaseTitle>\r\n            <CaseCounter>\r\n              <CountUp\r\n                start={0}\r\n                duration={3}\r\n                separator=\" \"\r\n                end={TotalAffected}\r\n              />\r\n            </CaseCounter>\r\n          </Case>\r\n          <Case recovered>\r\n            <CaseTitle>Recovered</CaseTitle>\r\n            <CaseCounter>\r\n              <CountUp\r\n                start={0}\r\n                duration={3}\r\n                separator=\" \"\r\n                end={TotalRecovered}\r\n              />\r\n            </CaseCounter>\r\n          </Case>\r\n          <Case deaths>\r\n            <CaseTitle>Deaths</CaseTitle>\r\n            <CaseCounter>\r\n              <CountUp start={0} duration={3} separator=\" \" end={TotalDeaths} />\r\n            </CaseCounter>\r\n          </Case>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TotalCases;\r\n","import React from \"react\";\r\nimport { Case, CaseTitle, CaseCounter } from \"./CasesStyles\";\r\nimport CountUp from \"react-countup\";\r\n\r\nfunction NewCases({\r\n  cases: { AllNewCases, NewConfirmed, NewRecovered, NewDeaths }\r\n}) {\r\n  return (\r\n    <>\r\n      <Case confirmed>\r\n        <CaseTitle>All</CaseTitle>\r\n        <CaseCounter>\r\n          <CountUp start={0} duration={3} separator=\" \" end={AllNewCases} />\r\n        </CaseCounter>\r\n      </Case>\r\n      <Case active>\r\n        <CaseTitle>Active</CaseTitle>\r\n        <CaseCounter>\r\n          <CountUp start={0} duration={3} separator=\" \" end={NewConfirmed} />\r\n        </CaseCounter>\r\n      </Case>\r\n      <Case recovered>\r\n        <CaseTitle>Recovered</CaseTitle>\r\n        <CaseCounter>\r\n          <CountUp start={0} duration={3} separator=\" \" end={NewRecovered} />\r\n        </CaseCounter>\r\n      </Case>\r\n      <Case deaths>\r\n        <CaseTitle>Deaths</CaseTitle>\r\n        <CaseCounter>\r\n          <CountUp start={0} duration={3} separator=\" \" end={NewDeaths} />\r\n        </CaseCounter>\r\n      </Case>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewCases;\r\n","import React, { useState } from \"react\";\r\nimport { Card, CardTitle, Navigation, Button } from \"../DashboardStyles\";\r\nimport { Wrapper } from \"./CasesStyles\";\r\nimport TotalCases from \"./TotalCases\";\r\nimport NewCases from \"./NewCases\";\r\n\r\nfunction Cases({ cases, newCases }) {\r\n  const [activeButton, setActiveButton] = useState(\"total\");\r\n  return (\r\n    <Card>\r\n      <CardTitle>Cases</CardTitle>\r\n      <Navigation>\r\n        <Button\r\n          active={activeButton === \"total\" ? true : false}\r\n          onClick={() => setActiveButton(\"total\")}\r\n        >\r\n          Total\r\n        </Button>\r\n        <Button\r\n          active={activeButton === \"new\" ? true : false}\r\n          onClick={() => setActiveButton(\"new\")}\r\n        >\r\n          New\r\n        </Button>\r\n      </Navigation>\r\n      <Wrapper>\r\n        {activeButton === \"total\" ? (\r\n          <TotalCases cases={cases} />\r\n        ) : (\r\n          <NewCases cases={newCases} />\r\n        )}\r\n      </Wrapper>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Cases;\r\n","export const fetchGlobalData = async () => {\r\n  try {\r\n    const response = await fetch(\"https://api.covid19api.com/summary\");\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      const cases = getCasesFrom(data.Global);\r\n      const newCases = getNewCasesFrom(data.Global);\r\n      const mostInfected = getMostInfectedFrom(data.Countries);\r\n      return { cases, newCases, mostInfected };\r\n    } else {\r\n      window.location.reload(true);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getCasesFrom = ({ TotalConfirmed, TotalRecovered, TotalDeaths }) => {\r\n  const TotalAffected = TotalConfirmed - TotalRecovered - TotalDeaths;\r\n  return {\r\n    TotalAffected,\r\n    TotalConfirmed,\r\n    TotalRecovered,\r\n    TotalDeaths\r\n  };\r\n};\r\nconst getNewCasesFrom = ({ NewConfirmed, NewRecovered, NewDeaths }) => {\r\n  const AllNewCases = NewConfirmed + NewRecovered + NewDeaths;\r\n  return { AllNewCases, NewConfirmed, NewRecovered, NewDeaths };\r\n};\r\n\r\nconst getMostInfectedFrom = data => {\r\n  const amountOfTopCountries = 10;\r\n  const mostInfected = data\r\n    .sort((a, b) => (a.TotalConfirmed > b.TotalConfirmed ? -1 : 1))\r\n    .slice(0, amountOfTopCountries);\r\n  return mostInfected;\r\n};\r\n\r\nexport const fetchAllCountries = async () => {\r\n  try {\r\n    const response = await fetch(\"https://api.covid19api.com/countries\");\r\n    const data = await response.json();\r\n    return data.sort((a, b) => (a.Country > b.Country ? 1 : -1));\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyOfSelectedCountry = async countrySlug => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://api.covid19api.com/total/dayone/country/${countrySlug}`\r\n    );\r\n    const data = await response.json();\r\n    const dailyData = data\r\n      .filter(item => item.Confirmed !== 0)\r\n      .map(day => ({\r\n        Date: day.Date,\r\n        Deaths: day.Deaths,\r\n        Recovered: day.Recovered,\r\n        Active: day.Active,\r\n        Confirmed: day.Confirmed\r\n      }));\r\n    return dailyData;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Card } from \"../../DashboardStyles\";\r\n\r\nexport const MostInfectedCard = styled(Card)`\r\n  @media (min-width: 860px) {\r\n    grid-column: 2/-1;\r\n    grid-row: 1/3;\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  font-family: Roboto, sans-serif;\r\n  font-size: 0.95rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  min-height: 80px;\r\n  padding: 6px 0;\r\n  border-radius: 10px;\r\n  background-color: #272727;\r\n  margin-bottom: 0.7rem;\r\n  @media (min-width: 420px) {\r\n    flex-direction: row;\r\n    min-height: 60px;\r\n    padding: 0 8px;\r\n  }\r\n  @media (min-width: 980px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CountryName = styled.span`\r\n  text-align: center;\r\n  @media (min-width: 420px) {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport const CountryInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (min-width: 420px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const Infected = styled.span`\r\n  @media (min-width: 980px) {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { CardTitle } from \"../../DashboardStyles\";\r\nimport {\r\n  ListItem,\r\n  CountryName,\r\n  CountryInfo,\r\n  MostInfectedCard,\r\n  Infected\r\n} from \"./MostInfectedStyles\";\r\nimport CountUp from \"react-countup\";\r\n\r\nfunction MostInfected({ countries }) {\r\n  return (\r\n    <MostInfectedCard>\r\n      <CardTitle>Most infected countries</CardTitle>\r\n      {countries ? (\r\n        <ul>\r\n          {countries.map(country => (\r\n            <ListItem key={country.CountryCode}>\r\n              <CountryInfo>\r\n                <img\r\n                  src={`https://www.countryflags.io/${country.CountryCode}/shiny/24.png`}\r\n                  alt={country.Slug}\r\n                />\r\n                <CountryName>{country.Country}</CountryName>\r\n              </CountryInfo>\r\n              <Infected>\r\n                <CountUp\r\n                  start={0}\r\n                  end={country.TotalConfirmed}\r\n                  duration={3}\r\n                  separator=\" \"\r\n                />\r\n              </Infected>\r\n            </ListItem>\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n    </MostInfectedCard>\r\n  );\r\n}\r\nexport default MostInfected;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ChartWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 200px;\r\n  max-height: 250px;\r\n  height: 100%;\r\n`;\r\n","export const getPercentage = (numberToDivide, divider) => {\r\n  if (divider !== 0) {\r\n    const percentage = (numberToDivide / divider) * 100;\r\n    return percentage.toFixed(2);\r\n  } else {\r\n    return 0;\r\n  }\r\n};\r\n\r\nexport const getDailyData = data => {\r\n  const DailyConfirmed = data.map(day => ({\r\n    y: day.Confirmed,\r\n    t: new Date(day.Date)\r\n  }));\r\n  const DailyActive = data.map(day => ({\r\n    y: day.Active,\r\n    t: new Date(day.Date)\r\n  }));\r\n  const DailyRecovered = data.map(day => ({\r\n    y: day.Recovered,\r\n    t: new Date(day.Date)\r\n  }));\r\n  const DailyDeaths = data.map(day => ({\r\n    y: day.Deaths,\r\n    t: new Date(day.Date)\r\n  }));\r\n  return { DailyConfirmed, DailyActive, DailyRecovered, DailyDeaths };\r\n};\r\n\r\nexport const calculateNewCases = (lastDay, dayBefore) => {\r\n  const NewConfirmed = lastDay.Confirmed - dayBefore.Confirmed;\r\n  const NewRecovered = lastDay.Recovered - dayBefore.Recovered;\r\n  const NewDeaths = lastDay.Deaths - dayBefore.Deaths;\r\n  const AllNewCases = NewConfirmed + NewRecovered + NewDeaths;\r\n  return { AllNewCases, NewConfirmed, NewRecovered, NewDeaths };\r\n};\r\n\r\nexport const calculateTotalCases = lastDay => {\r\n  const TotalConfirmed = lastDay.Confirmed;\r\n  const TotalRecovered = lastDay.Recovered;\r\n  const TotalDeaths = lastDay.Deaths;\r\n  const TotalAffected = TotalConfirmed - TotalDeaths - TotalRecovered;\r\n  return { TotalAffected, TotalConfirmed, TotalRecovered, TotalDeaths };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\nimport { ChartWrapper } from \"./StatisticsStyles\";\r\nimport { getPercentage } from \"../../helpers/functions\";\r\n\r\nfunction NewCases({\r\n  cases: { AllNewCases, NewConfirmed, NewRecovered, NewDeaths }\r\n}) {\r\n  const cnv = \"stats-chart\";\r\n  useEffect(() => {\r\n    const activePercentage = getPercentage(NewConfirmed, AllNewCases);\r\n    const recoveredPercentage = getPercentage(NewRecovered, AllNewCases);\r\n    const deathsPercentage = getPercentage(NewDeaths, AllNewCases);\r\n    const statsChart = new Chart(cnv, {\r\n      type: \"pie\",\r\n      data: {\r\n        labels: [\"Active\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"New cases\",\r\n            data: [activePercentage, recoveredPercentage, deathsPercentage],\r\n            backgroundColor: [\"#0364a5\", \"#198200\", \"#a70303\"],\r\n            borderColor: [\"#0364a5\", \"#198200\", \"#a70303\"],\r\n            hoverBackgroundColor: [\"#007cd0\", \"#24b701\", \"#c70000\"]\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          labels: {\r\n            fontColor: \"#fff\",\r\n            fontFamily: \"'Arial','sans-serif'\"\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return () => statsChart.destroy();\r\n  }, [AllNewCases, NewConfirmed, NewRecovered, NewDeaths]);\r\n  return (\r\n    <ChartWrapper>\r\n      <canvas id={cnv} />\r\n    </ChartWrapper>\r\n  );\r\n}\r\n\r\nexport default NewCases;\r\n","import React, { useEffect } from \"react\";\r\nimport { ChartWrapper } from \"./StatisticsStyles\";\r\nimport { Chart } from \"chart.js\";\r\nimport { getPercentage } from \"../../helpers/functions\";\r\n\r\nfunction TotalStatistics({\r\n  cases: { TotalConfirmed, TotalAffected, TotalRecovered, TotalDeaths }\r\n}) {\r\n  const cnv = \"stats-chart\";\r\n  useEffect(() => {\r\n    const activePercentage = getPercentage(TotalAffected, TotalConfirmed);\r\n    const recoveredPercentage = getPercentage(TotalRecovered, TotalConfirmed);\r\n    const deathsPercentage = getPercentage(TotalDeaths, TotalConfirmed);\r\n    const statsChart = new Chart(cnv, {\r\n      type: \"pie\",\r\n      data: {\r\n        labels: [\"Active\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"Proportions\",\r\n            data: [activePercentage, recoveredPercentage, deathsPercentage],\r\n            backgroundColor: [\"#0364a5\", \"#198200\", \"#a70303\"],\r\n            borderColor: [\"#0364a5\", \"#198200\", \"#a70303\"],\r\n            hoverBackgroundColor: [\"#007cd0\", \"#24b701\", \"#c70000\"]\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          labels: {\r\n            fontColor: \"#fff\",\r\n            fontFamily: \"'Arial','sans-serif'\"\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return () => statsChart.destroy();\r\n  }, [TotalConfirmed, TotalAffected, TotalRecovered, TotalDeaths]);\r\n  return (\r\n    <ChartWrapper>\r\n      <canvas id={cnv} />\r\n    </ChartWrapper>\r\n  );\r\n}\r\n\r\nexport default TotalStatistics;\r\n","import React, { useState } from \"react\";\r\nimport { Card, CardTitle, Navigation, Button } from \"../DashboardStyles\";\r\nimport NewStatistics from \"./NewStatistics\";\r\nimport TotalStatistics from \"./TotalStatistics\";\r\n\r\nfunction Statistics({ cases, newCases }) {\r\n  const [activeButton, setActiveButton] = useState(\"total\");\r\n  return (\r\n    <Card>\r\n      <CardTitle>Ratios(%)</CardTitle>\r\n      <Navigation>\r\n        <Button\r\n          active={activeButton === \"total\" ? true : false}\r\n          onClick={() => setActiveButton(\"total\")}\r\n        >\r\n          Total\r\n        </Button>\r\n        <Button\r\n          active={activeButton === \"new\" ? true : false}\r\n          onClick={() => setActiveButton(\"new\")}\r\n        >\r\n          New\r\n        </Button>\r\n      </Navigation>\r\n      {activeButton === \"total\" ? (\r\n        <TotalStatistics cases={cases} />\r\n      ) : (\r\n        <NewStatistics cases={newCases} />\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Wrapper } from \"./WorldStyles\";\r\nimport Cases from \"../Cases/Cases\";\r\nimport { fetchGlobalData } from \"../../../api\";\r\nimport MostInfected from \"./MostInfected/MostInfected\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport { SpinnerWrapper, Spinner } from \"../DashboardStyles\";\r\n\r\nfunction World() {\r\n  const [cases, setCases] = useState({});\r\n  const [newCases, setNewCases] = useState({});\r\n  const [mostInfected, setMostInfected] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n    if (isMounted) {\r\n      const fetchAPI = async () => {\r\n        setIsLoading(true);\r\n        const { cases, newCases, mostInfected } = await fetchGlobalData();\r\n        setNewCases(newCases);\r\n        setCases(cases);\r\n        setMostInfected(mostInfected);\r\n        setIsLoading(false);\r\n      };\r\n      fetchAPI();\r\n    }\r\n    return () => setIsMounted(false);\r\n  }, [isMounted]);\r\n  return (\r\n    <Wrapper>\r\n      {isLoading ? (\r\n        <SpinnerWrapper>\r\n          <Spinner />\r\n        </SpinnerWrapper>\r\n      ) : (\r\n        <>\r\n          <Cases cases={cases} newCases={newCases} />\r\n          <Statistics cases={cases} newCases={newCases} />\r\n          <MostInfected countries={mostInfected} />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default World;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  gap: 2rem;\r\n`;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Filter = styled.div`\r\n  margin-bottom: 1.5rem;\r\n  width: 100%;\r\n  max-width: 340px;\r\n`;\r\n\r\nexport const FilterLabel = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FilterInput = styled.input`\r\n  width: 90%;\r\n  padding: 4px 8px;\r\n  border-radius: 8px;\r\n  font-family: Roboto, sans-serif;\r\n  font-size: 0.9rem;\r\n  margin-left: 0.5rem;\r\n  border: none;\r\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);\r\n  background-color: #e1e1e1;\r\n  @media (min-width: 420px) {\r\n    padding: 8px;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  overflow-y: scroll;\r\n  flex-wrap: wrap;\r\n  height: 85%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-height: 500px;\r\n  padding: 0 0.8rem 0 0;\r\n  &::-webkit-scrollbar {\r\n    width: 0.8rem;\r\n    @media (min-width: 980px) {\r\n      width: 1rem;\r\n    }\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.4);\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #23b400;\r\n    border-radius: 15px;\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  width: 100%;\r\n  min-height: 70px;\r\n  max-height: 80px;\r\n  margin-bottom: 0.7rem;\r\n  @media (min-width: 420px) {\r\n    width: 48%;\r\n    min-height: 60px;\r\n    padding: 0 8px;\r\n  }\r\n`;\r\n\r\nexport const LinkWrapper = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: Roboto;\r\n  font-size: 0.95rem;\r\n  padding: 8px;\r\n  background-color: #272727;\r\n  height: 100%;\r\n  width: 100%;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n  &:hover,\r\n  &:focus {\r\n    color: #23b400;\r\n  }\r\n  @media (min-width: 860px) {\r\n    flex-direction: row;\r\n    text-align: left;\r\n    justify-content: flex-start;\r\n  }\r\n  @media (min-width: 980px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nexport const FlagImg = styled.img`\r\n  margin-bottom: 0.5rem;\r\n  @media (min-width: 860px) {\r\n    margin-bottom: 0;\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Card, CardTitle } from \"../../DashboardStyles\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport {\r\n  Filter,\r\n  FilterLabel,\r\n  FilterInput,\r\n  List,\r\n  ListItem,\r\n  LinkWrapper,\r\n  FlagImg\r\n} from \"./CountriesListStyles\";\r\n\r\nfunction CountriesList({ countries }) {\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  return (\r\n    <Card>\r\n      <CardTitle>All countries</CardTitle>\r\n      <Filter>\r\n        <FilterLabel>\r\n          <FaSearch />\r\n          <FilterInput\r\n            value={searchWord}\r\n            onChange={e => setSearchWord(e.target.value)}\r\n          />\r\n        </FilterLabel>\r\n      </Filter>\r\n      <List>\r\n        {countries\r\n          .filter(country =>\r\n            new RegExp(\"^\" + searchWord, \"i\").test(country.Country)\r\n          )\r\n          .map(country => (\r\n            <ListItem key={country.ISO2}>\r\n              <LinkWrapper to={`/countries/${country.Slug}`}>\r\n                <FlagImg\r\n                  src={`https://www.countryflags.io/${country.ISO2}/shiny/32.png`}\r\n                  alt={country.Country}\r\n                />\r\n                {country.Country}\r\n              </LinkWrapper>\r\n            </ListItem>\r\n          ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CountriesList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Wrapper } from \"./CountriesStyles\";\r\nimport { fetchAllCountries } from \"../../../api\";\r\nimport CountriesList from \"./CountriesList/CountriesList\";\r\nimport { SpinnerWrapper, Spinner } from \"../DashboardStyles\";\r\n\r\nfunction Countries() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n    if (isMounted) {\r\n      const fetchAPI = async () => {\r\n        setIsLoading(true);\r\n        const data = await fetchAllCountries();\r\n        setCountries(data);\r\n        setIsLoading(false);\r\n      };\r\n      fetchAPI();\r\n    }\r\n    return () => setIsMounted(false);\r\n  }, [isMounted]);\r\n  return (\r\n    <Wrapper>\r\n      {isLoading ? (\r\n        <SpinnerWrapper>\r\n          <Spinner />\r\n        </SpinnerWrapper>\r\n      ) : (\r\n        <CountriesList countries={countries} />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Countries;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  gap: 2rem;\r\n  @media (min-width: 860px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  @media (min-width: 980px) {\r\n    gap: 2.5rem;\r\n  }\r\n`;\r\n\r\nexport const BlankCountry = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  grid-column: 1/-1;\r\n  font-family: Roboto, sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BlankTitle = styled.p`\r\n  font-size: 2.5rem;\r\n  color: #fff;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n  @media (min-width: 860px) {\r\n    font-size: 3.2rem;\r\n  }\r\n`;\r\n\r\nexport const BlankLink = styled(Link)`\r\n  font-size: 1.5rem;\r\n  color: #23b400;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  @media (min-width: 860px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const GoBackArrow = styled.span`\r\n  font-size: 1.8rem;\r\n  animation: slide 1.6s ease-out 1;\r\n  @media (min-width: 860px) {\r\n    font-size: 2.2rem;\r\n  }\r\n  @keyframes slide {\r\n    0% {\r\n      transform: translateX(60px);\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      transform: translateX(0);\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Card } from \"../../DashboardStyles\";\r\n\r\nexport const ChartWrapper = styled.div`\r\n  position: relative;\r\n  min-height: 280px;\r\n  height: 410px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const LineChartCard = styled(Card)`\r\n  height: 500px;\r\n  @media (min-width: 860px) {\r\n    grid-column: 1/-1;\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\nimport { CardTitle } from \"../../DashboardStyles\";\r\nimport { ChartWrapper, LineChartCard } from \"./LineChartStyles\";\r\n\r\nfunction LineChart({\r\n  dailyData: { DailyConfirmed, DailyActive, DailyRecovered, DailyDeaths }\r\n}) {\r\n  const cnv = \"daily-chart\";\r\n  useEffect(() => {\r\n    const dailyChart = new Chart(cnv, {\r\n      type: \"line\",\r\n      data: {\r\n        datasets: [\r\n          {\r\n            label: \"Confirmed\",\r\n            data: DailyConfirmed,\r\n            borderColor: [\"#790a98\"],\r\n            borderCapStyle: \"round\",\r\n            borderJoinStyle: \"round\",\r\n            pointBackgroundColor: \"rgb(182, 31, 224)\",\r\n            hoverBackgroundColor: [\"#790a98\"],\r\n            pointHoverRadius: 5,\r\n            borderWidth: 6,\r\n            fill: false\r\n          },\r\n          {\r\n            label: \"Active\",\r\n            data: DailyActive,\r\n            borderColor: [\"#03568e\"],\r\n            borderCapStyle: \"round\",\r\n            borderJoinStyle: \"round\",\r\n            pointBackgroundColor: \"rgb(22, 129, 201)\",\r\n            hoverBackgroundColor: [\"#03568e\"],\r\n            pointHoverRadius: 5,\r\n            borderWidth: 6,\r\n            fill: false\r\n          },\r\n          {\r\n            label: \"Recovered\",\r\n            data: DailyRecovered,\r\n            borderColor: [\"#198200\"],\r\n            borderCapStyle: \"round\",\r\n            borderJoinStyle: \"round\",\r\n            pointBackgroundColor: \"rgb(47, 184, 15)\",\r\n            hoverBackgroundColor: [\"#198200\"],\r\n            pointHoverRadius: 5,\r\n            borderWidth: 6,\r\n            fill: false\r\n          },\r\n          {\r\n            label: \"Deaths\",\r\n            data: DailyDeaths,\r\n            borderColor: [\"#a70303\"],\r\n            borderCapStyle: \"round\",\r\n            borderJoinStyle: \"round\",\r\n            pointBackgroundColor: \"rgb(230, 46, 46)\",\r\n            hoverBackgroundColor: [\"#a70303\"],\r\n            pointHoverRadius: 5,\r\n            borderWidth: 6,\r\n            fill: false\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          labels: {\r\n            fontColor: \"#fff\",\r\n            fontFamily: \"'Arial','sans-serif'\"\r\n          }\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              type: \"time\",\r\n              time: {\r\n                isoWeekday: true,\r\n                unit: \"week\",\r\n                parser: \"MM DD\",\r\n                displayFormats: {\r\n                  week: \"MM DD\"\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    });\r\n    return () => dailyChart.destroy();\r\n  }, [DailyActive, DailyConfirmed, DailyRecovered, DailyDeaths]);\r\n  return (\r\n    <LineChartCard>\r\n      <CardTitle>Daily Cases</CardTitle>\r\n      <ChartWrapper>\r\n        <canvas id={cnv} />\r\n      </ChartWrapper>\r\n    </LineChartCard>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchDailyOfSelectedCountry } from \"../../../api\";\r\nimport Cases from \"../Cases/Cases\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport {\r\n  Wrapper,\r\n  BlankCountry,\r\n  BlankTitle,\r\n  BlankLink,\r\n  GoBackArrow\r\n} from \"./SelectedCountryStyles\";\r\nimport LineChart from \"./LineChart/LineChart\";\r\nimport { SpinnerWrapper, Spinner } from \"../DashboardStyles\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\nimport {\r\n  calculateTotalCases,\r\n  calculateNewCases,\r\n  getDailyData\r\n} from \"../../helpers/functions\";\r\n\r\nfunction SelectedCountry({ match }) {\r\n  const [cases, setCases] = useState({});\r\n  const [newCases, setNewCases] = useState({});\r\n  const [dailyData, setDailyData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n    if (isMounted) {\r\n      const fetchAPI = async () => {\r\n        setIsLoading(true);\r\n        const data = await fetchDailyOfSelectedCountry(match.params.slug);\r\n        if (data.length !== 0) {\r\n          const lastDay = data[data.length - 1];\r\n          const dayBefore = data[data.length - 2];\r\n          setCases(calculateTotalCases(lastDay));\r\n          setNewCases(calculateNewCases(lastDay, dayBefore));\r\n          setDailyData(getDailyData(data));\r\n        }\r\n        setIsLoading(false);\r\n      };\r\n      fetchAPI();\r\n    }\r\n    return () => setIsMounted(false);\r\n  }, [match, isMounted]);\r\n  return (\r\n    <Wrapper>\r\n      {isLoading ? (\r\n        <SpinnerWrapper>\r\n          <Spinner />\r\n        </SpinnerWrapper>\r\n      ) : Object.keys(cases).length !== 0 ? (\r\n        <>\r\n          <Cases cases={cases} newCases={newCases} />\r\n          <Statistics cases={cases} newCases={newCases} />\r\n          <LineChart dailyData={dailyData} />\r\n        </>\r\n      ) : (\r\n        <BlankCountry>\r\n          <BlankTitle>No cases noted in that country</BlankTitle>\r\n          <BlankLink to=\"/countries\">\r\n            Go back to countries\r\n            <GoBackArrow>\r\n              <FaArrowLeft />\r\n            </GoBackArrow>\r\n          </BlankLink>\r\n        </BlankCountry>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default SelectedCountry;\r\n","import React from \"react\";\r\nimport { Wrapper } from \"./DashboardStyles\";\r\nimport { Route } from \"react-router-dom\";\r\nimport World from \"./World/World\";\r\nimport Countries from \"./Countries/Countries\";\r\nimport SelectedCountry from \"./SelectedCountry/SelectedCountry\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <Wrapper>\r\n      <Route path=\"/global\" component={World} />\r\n      <Route path=\"/countries\" exact component={Countries} />\r\n      <Route path=\"/countries/:slug\" component={SelectedCountry} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { GlobalStyle, Wrapper } from \"./GlobalStyles\";\r\nimport { Redirect, HashRouter } from \"react-router-dom\";\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Dashboard from \"./components/Dashboard/Dashboard\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Redirect from=\"/\" to=\"/global\" />\r\n      <GlobalStyle />\r\n      <Sidebar />\r\n      <Wrapper>\r\n        <Header />\r\n        <Dashboard />\r\n      </Wrapper>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}